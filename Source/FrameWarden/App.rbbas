#tag ClassProtected Class AppInherits Application	#tag Event		Sub EnableMenuItems()		  HelpAbout.Enable		  HelpPurchaseFrameWarden.Enable		  HelpReportABug.Enable		End Sub	#tag EndEvent	#tag Event		Sub Open()		  programStartupTime = Ticks()		  		  gLogMode = LogFuncs.LXO		  		  MakeNewConfigFromTemplate		  		  TheFarm = new Farm		  		  MyIPAddress = System.GetNetworkInterface.IPAddress		  		  gClipboard = new Clipboard		End Sub	#tag EndEvent	#tag MenuHandler		Function EditPreferences() As Boolean Handles EditPreferences.Action			PrefsWindow.Show						Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileClose() As Boolean Handles FileClose.Action			Window(0).close						Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpAbout() As Boolean Handles HelpAbout.Action			AboutWindow.Show						Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpPurchaseFrameWarden() As Boolean Handles HelpPurchaseFrameWarden.Action			ShowURL "http://www.framewarden.com/FrameWarden/Purchase.html"						Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpReportABug() As Boolean Handles HelpReportABug.Action			ReportABugWindow.Show						Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpWatchTutorialsOnline() As Boolean Handles HelpWatchTutorialsOnline.Action			ShowURL "http://www.framewarden.com/FrameWarden/Tutorials.html"						Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub MakeNewConfigFromTemplate()		  Dim configRoot, templateConfig, newConfig As FolderItem		  Dim configInString, directoryDivider, configsPath As String		  Dim TextIn As TextInputStream		  Dim TextOut As TextOutputStream		  		  #if TargetMacOS then		    directoryDivider = "/"		  #elseif TargetWin32 then		    directoryDivider = "\"		  #endif		  		  // <import>X:\zstuff\Nates_Modo_Farm\App\CustomConfigs\Configs</import>		  // <import>X:\zstuff\Nates_Modo_Farm\App\CustomConfigs\Scripts</import>		  		  configRoot = GetFolderItem("CustomConfigs")		  templateConfig = configRoot.Child("Template.CFG")		  newConfig = configRoot.Child("RenderNode.CFG")		  		  if templateConfig <> nil then		    TextIn = templateConfig.OpenAsTextFile		  else		    MsgBox "The file 'Template.CFG' could not be found.  Make sure you have the 'CustomConfigs' directory and all of its' contents properly installed.  The application must shut down."		    Quit		  end if		  		  if TextIn <> nil then		    TextOut = newConfig.CreateTextFile		    		    configInString = TextIn.ReadAll		    configsPath = configRoot.AbsolutePath		    		    if TextOut <> nil then		      #if TargetMacOS then		        configsPath = "/Volumes/" + ReplaceAll(configsPath, ":", "/")		        		        configInString = Replace(configInString, "CONFIGS_PATH_HERE", configsPath + "Configs")		        configInString = Replace(configInString, "SCRIPTS_PATH_HERE", configsPath + "Scripts")		        		      #elseif TargetWin32 then		        configInString = Replace(configInString, "CONFIGS_PATH_HERE", configsPath + "Configs")		        configInString = Replace(configInString, "SCRIPTS_PATH_HERE", configsPath + "Scripts")		        		      #endif		      		      TextOut.Write configInString		    end if		  end if		  		End Sub	#tag EndMethod	#tag Constant, Name = kEditClear, Type = String, Dynamic = False, Default = \"&Delete", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"&Delete"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"&Delete"	#tag EndConstant	#tag Constant, Name = kFileQuit, Type = String, Dynamic = False, Default = \"&Quit", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"E&xit"	#tag EndConstant	#tag Constant, Name = kFileQuitShortcut, Type = String, Dynamic = False, Default = \"", Scope = Public		#Tag Instance, Platform = Mac OS, Language = Default, Definition  = \"Cmd+Q"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"Ctrl+Q"	#tag EndConstant	#tag ViewBehavior	#tag EndViewBehaviorEnd Class#tag EndClass